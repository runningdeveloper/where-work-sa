{"version":3,"sources":["webpack:///./src/pages/list.js"],"names":["ListPage","data","useState","searchTerm","setSearchTerm","title","className","aria-label","to","type","placeholder","value","onChange","e","target","length","allLocationsJson","edges","map","node","key","id","parent","name","description","substring","wifi","quality","rel","href","website","city","lat","long"],"mappings":"8JAsIeA,UAhIE,WACf,IAAMC,EAAI,OADW,EAkCeC,mBAAS,IAAtCC,EAlCc,KAkCFC,EAlCE,KAoCrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,gBACX,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aAAaC,aAAW,eACrC,4BACE,4BACE,kBAAC,OAAD,CAAMC,GAAG,KAAT,SAEF,wBAAIF,UAAU,aACZ,kBAAC,OAAD,CAAME,GAAG,UAAT,kBAIN,wBAAIF,UAAU,cAAd,eACA,yBAAKA,UAAU,WACb,2BACEA,UAAU,QACVG,KAAK,OACLC,YAAY,SACZC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAAcS,EAAEC,OAAOH,WAGzCR,EAAWY,OAAS,GACnB,6BAAST,UAAU,qBACjB,yBAAKA,UAAU,gBAAf,0EAMJ,6BACA,yBAAKA,UAAU,mBACb,2BAAOA,UAAU,uCACf,+BACE,4BACE,oCACA,2CACA,oCACA,uCACA,oCACA,0CAGJ,+BACGL,EAAKe,iBAAiBC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC/B,wBAAIC,IAAKD,EAAKE,IACZ,4BACE,kBAAC,OAAD,CAAMb,GAAE,IAAMW,EAAKG,OAAOC,KAAlB,KAA4BJ,EAAKI,OAE3C,4BACGJ,EAAKK,YAAYT,OAAS,GACpBI,EAAKK,YAAYC,UAAU,EAAG,IADpC,MAEGN,EAAKK,aAEX,4BACGL,EAAKO,MAAQP,EAAKO,KAAKC,QACpBR,EAAKO,KAAKC,QACV,QAEN,4BACE,uBACEb,OAAO,SACPc,IAAI,sBACJC,KAAMV,EAAKW,SAEVX,EAAKW,UAGV,4BAAKX,EAAKY,MACV,4BACE,uBACEjB,OAAO,SACPc,IAAI,sBACJC,KAAI,qDAAuDV,EAAKa,IAA5D,IAAmEb,EAAKc,MAH9E,oB","file":"component---src-pages-list-js-5ad14b560412c1b72de0.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst ListPage = () => {\n  const data = useStaticQuery(graphql`\n    query ListQuery {\n      allLocationsJson {\n        edges {\n          node {\n            cost\n            description\n            email\n            id\n            lat\n            long\n            name\n            notes\n            tel\n            times\n            website\n            city\n            wifi {\n              password\n              quality\n              ssid\n            }\n            parent {\n              ... on File {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Layout>\n      <SEO title=\"Places List\" />\n      <section className=\"section\">\n        <div className=\"container\">\n          <nav className=\"breadcrumb\" aria-label=\"breadcrumbs\">\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"is-active\">\n                <Link to=\"/list/\">Places List</Link>\n              </li>\n            </ul>\n          </nav>\n          <h1 className=\"title is-2\">Places List</h1>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"Search\"\n              value={searchTerm}\n              onChange={e => setSearchTerm(e.target.value)}\n            />\n          </div>\n          {searchTerm.length > 0 && (\n            <article className=\"message is-danger\">\n              <div className=\"message-body\">\n                Search coming soon, maybe you can add it (some kind of regex\n                filter)?\n              </div>\n            </article>\n          )}\n          <br />\n          <div className=\"table-container\">\n            <table className=\"table table is-striped is-fullwidth\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Description</th>\n                  <th>WiFi</th>\n                  <th>Website</th>\n                  <th>City</th>\n                  <th>Location</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.allLocationsJson.edges.map(({ node }) => (\n                  <tr key={node.id}>\n                    <td>\n                      <Link to={`/${node.parent.name}/`}>{node.name}</Link>\n                    </td>\n                    <td>\n                      {node.description.length > 50\n                        ? `${node.description.substring(0, 50)}...`\n                        : node.description}\n                    </td>\n                    <td>\n                      {node.wifi && node.wifi.quality\n                        ? node.wifi.quality\n                        : \"None\"}\n                    </td>\n                    <td>\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={node.website}\n                      >\n                        {node.website}\n                      </a>\n                    </td>\n                    <td>{node.city}</td>\n                    <td>\n                      <a\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        href={`https://www.google.co.za/maps/search/?api=1&query=${node.lat},${node.long}`}\n                      >\n                        Map\n                      </a>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default ListPage\n"],"sourceRoot":""}